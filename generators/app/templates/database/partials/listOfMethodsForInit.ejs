    <% for (let index = 0; index < types.length; index++) { _%>
        <%  if (typesName[index] !== "Query" && typesName[index] !== "Mutation") {
                //let fields = getFields(types[index])
                let type = types[index]
                let fields = []
                for (let index = 0; index < type["fields"].length; index++) {
                    fields.push(type["fields"][index])
                } _%>
                let <%- typesName[index].toLowerCase()_%>Tab = []
                function init<%-typesName[index]%>(){
                    for(let i = 0; i < 5; i++){
                        <%- typesName[index].toLowerCase()%>Tab.push(new model.<%- typesName[index]%>(<%- include('./getParametersForCreate', {typesName : typesName, currentType : types[index], currentTypeName : typesName[index], fields : fields, relations : relations, matching : matching, table: tables[index]["columns"], tableName: tables[index].name})%>));
                    }
                }
                <%- include('./getUpdateForModel', {tables: tables, currentType : types[index], currentTypeName : typesName[index], fields : fields, types : types, typesName : typesName, relations : relations, hasFieldType: hasFieldType, getSQLTableName: getSQLTableName}) %>
        <% }
    } %>

    // Other tables (Selfjoin & ManyToMany)
        
    <%_types.forEach(type => {
        type.fields.forEach(field => {
            if(field.joinTable.state){
                if(field.relationType === relations.manyToMany && field.activeSide){%>
                    let <%-field.joinTable.name.toLowerCase()%>Tab = []
                    function init<%-field.joinTable.name%>(){
                        for(let i = 0; i < 5; i++){
                            
                            <%- field.joinTable.name.toLowerCase()%>Tab.push({<%- field.joinTable.contains[0].fieldName.toLowerCase()%>_id : Math.floor((Math.random() * 5) + 1), <%-field.joinTable.contains[1].fieldName.toLowerCase()%>_id : Math.floor((Math.random() * 5) + 1)})
                        }
                    }
                

                <%}
                if(field.relationType === relations.selfJoinMany){%>
                    let <%-field.joinTable.name.toLowerCase()%>Tab = []
                    function init<%-field.joinTable.name%>(){
                        for(let i = 0; i < 5; i++){
                            
                            <%- field.joinTable.name.toLowerCase()%>Tab.push({<%- field.joinTable.contains[0].fieldName.toLowerCase()%>_id : Math.floor((Math.random() * 5) + 1), <%-field.joinTable.contains[0].type.toLowerCase()%>_id : Math.floor((Math.random() * 5) + 1)})
                        }
                    }
                
                <%_}  
            }
            
        })
    })_%>
